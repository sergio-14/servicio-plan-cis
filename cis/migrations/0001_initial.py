# Generated by Django 5.2.4 on 2025-07-16 22:22

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AreaEstrategica',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo_area', models.IntegerField(unique=True, verbose_name='Código de Área')),
                ('nombre_area', models.CharField(max_length=100, verbose_name='Nombre del Área')),
                ('descripcion', models.TextField(blank=True, null=True, verbose_name='Descripción')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Área Estratégica',
                'verbose_name_plural': 'Áreas Estratégicas',
                'ordering': ['codigo_area'],
            },
        ),
        migrations.CreateModel(
            name='Entidad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo_entidad', models.IntegerField(verbose_name='Código de Entidad')),
                ('nombre_entidad', models.CharField(max_length=100, verbose_name='Nombre de la Entidad')),
                ('tipo_entidad', models.CharField(blank=True, max_length=50, null=True, verbose_name='Tipo de Entidad')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Entidad',
                'verbose_name_plural': 'Entidades',
                'ordering': ['codigo_entidad', 'nombre_entidad'],
            },
        ),
        migrations.CreateModel(
            name='TipoIndicador',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_tipo', models.CharField(choices=[('gestion', 'Gestión'), ('resultado_pdu', 'Resultado PDU'), ('resultado_pdes', 'Resultado PDES')], max_length=50, unique=True, verbose_name='Tipo de Indicador')),
                ('descripcion', models.TextField(blank=True, null=True, verbose_name='Descripción')),
            ],
            options={
                'verbose_name': 'Tipo de Indicador',
                'verbose_name_plural': 'Tipos de Indicadores',
            },
        ),
        migrations.CreateModel(
            name='TipoResultado',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_tipo', models.CharField(choices=[('pdu', 'PDU'), ('pdes', 'PDES'), ('n_c', 'N/C')], max_length=50, unique=True, verbose_name='Tipo de Resultado')),
                ('descripcion', models.TextField(blank=True, null=True, verbose_name='Descripción')),
            ],
            options={
                'verbose_name': 'Tipo de Resultado',
                'verbose_name_plural': 'Tipos de Resultados',
            },
        ),
        migrations.CreateModel(
            name='AreaOrganizacional',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo_area_org', models.IntegerField(verbose_name='Código de Área Organizacional')),
                ('nombre_area_org', models.CharField(max_length=100, verbose_name='Nombre del Área Organizacional')),
                ('descripcion', models.TextField(blank=True, null=True, verbose_name='Descripción')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('entidad', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='areas_organizacionales', to='cis.entidad')),
            ],
            options={
                'verbose_name': 'Área Organizacional',
                'verbose_name_plural': 'Áreas Organizacionales',
                'ordering': ['entidad', 'codigo_area_org'],
                'unique_together': {('entidad', 'codigo_area_org')},
            },
        ),
        migrations.CreateModel(
            name='Indicador',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo_indicador', models.IntegerField(unique=True, verbose_name='Código del Indicador')),
                ('nombre_indicador', models.CharField(max_length=200, verbose_name='Nombre del Indicador')),
                ('descripcion_indicador', models.TextField(blank=True, null=True, verbose_name='Descripción del Indicador')),
                ('formula', models.CharField(blank=True, max_length=500, null=True, verbose_name='Fórmula')),
                ('linea_base_2020', models.CharField(blank=True, max_length=50, null=True, verbose_name='Línea Base 2020')),
                ('meta_2025', models.CharField(blank=True, max_length=50, null=True, verbose_name='Meta 2025')),
                ('fuente_informacion', models.CharField(blank=True, max_length=100, null=True, verbose_name='Fuente de Información')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('area_organizacional', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='indicadores', to='cis.areaorganizacional')),
                ('tipo_indicador', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='cis.tipoindicador', verbose_name='Tipo de Indicador')),
                ('tipo_resultado', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='cis.tiporesultado', verbose_name='Tipo de Resultado')),
            ],
            options={
                'verbose_name': 'Indicador',
                'verbose_name_plural': 'Indicadores',
                'ordering': ['codigo_indicador'],
            },
        ),
        migrations.CreateModel(
            name='ObjetivoEstrategico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo_objetivo', models.IntegerField(verbose_name='Código del Objetivo')),
                ('descripcion_objetivo', models.TextField(verbose_name='Descripción del Objetivo')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('area_estrategica', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='objetivos', to='cis.areaestrategica')),
            ],
            options={
                'verbose_name': 'Objetivo Estratégico',
                'verbose_name_plural': 'Objetivos Estratégicos',
                'ordering': ['area_estrategica', 'codigo_objetivo'],
            },
        ),
        migrations.CreateModel(
            name='Operacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo_operacion', models.IntegerField(verbose_name='Código de Operación')),
                ('descripcion_operacion', models.TextField(verbose_name='Descripción de la Operación')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('objetivo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='operaciones', to='cis.objetivoestrategico')),
            ],
            options={
                'verbose_name': 'Operación',
                'verbose_name_plural': 'Operaciones',
                'ordering': ['objetivo', 'codigo_operacion'],
            },
        ),
        migrations.CreateModel(
            name='AccionEstrategica',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descripcion_accion', models.TextField(verbose_name='Descripción de la Acción')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('indicador', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='acciones', to='cis.indicador')),
                ('operacion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='acciones', to='cis.operacion')),
            ],
            options={
                'verbose_name': 'Acción Estratégica',
                'verbose_name_plural': 'Acciones Estratégicas',
            },
        ),
        migrations.CreateModel(
            name='TasaEficacia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_tasa', models.CharField(max_length=200, verbose_name='Nombre de la Tasa')),
                ('formula_tasa', models.CharField(blank=True, max_length=500, null=True, verbose_name='Fórmula de la Tasa')),
                ('linea_base', models.CharField(blank=True, max_length=50, null=True, verbose_name='Línea Base')),
                ('meta_2025', models.CharField(blank=True, max_length=50, null=True, verbose_name='Meta 2025')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('area_organizacional', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasas_eficacia', to='cis.areaorganizacional')),
            ],
            options={
                'verbose_name': 'Tasa de Eficacia',
                'verbose_name_plural': 'Tasas de Eficacia',
            },
        ),
        migrations.CreateModel(
            name='ProgramacionFisica',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('anio', models.IntegerField(choices=[(2021, '2021'), (2022, '2022'), (2023, '2023'), (2024, '2024'), (2025, '2025')], validators=[django.core.validators.MinValueValidator(2021), django.core.validators.MaxValueValidator(2025)])),
                ('valor_programado', models.CharField(blank=True, max_length=50, null=True, verbose_name='Valor Programado')),
                ('valor_ejecutado', models.CharField(blank=True, max_length=50, null=True, verbose_name='Valor Ejecutado')),
                ('observaciones', models.TextField(blank=True, null=True, verbose_name='Observaciones')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('indicador', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='programaciones', to='cis.indicador')),
            ],
            options={
                'verbose_name': 'Programación Física',
                'verbose_name_plural': 'Programaciones Físicas',
                'ordering': ['indicador', 'anio'],
                'unique_together': {('indicador', 'anio')},
            },
        ),
        migrations.CreateModel(
            name='ProgramacionTasaEficacia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('anio', models.IntegerField(choices=[(2021, '2021'), (2022, '2022'), (2023, '2023'), (2024, '2024'), (2025, '2025')], validators=[django.core.validators.MinValueValidator(2021), django.core.validators.MaxValueValidator(2025)])),
                ('valor_programado', models.CharField(blank=True, max_length=50, null=True, verbose_name='Valor Programado')),
                ('valor_ejecutado', models.CharField(blank=True, max_length=50, null=True, verbose_name='Valor Ejecutado')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tasa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='programaciones', to='cis.tasaeficacia')),
            ],
            options={
                'verbose_name': 'Programación de Tasa de Eficacia',
                'verbose_name_plural': 'Programaciones de Tasas de Eficacia',
                'ordering': ['tasa', 'anio'],
                'unique_together': {('tasa', 'anio')},
            },
        ),
    ]
